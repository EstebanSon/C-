using System;
using System.Drawing;
using System.Windows.Forms;



namespace MySystem
{
    public enum EnumConvert
    {
        DECIMAL_TYPE = 0,
        BINARY_TYPE,
        HEX_TYPE,
        CHAR_TYPE,
        BASE64_TYPE,
    }
    
    class MyForm : Form
    {
        string[] strCodeList = {"Decimal", "Binary", "Hex", "Char", "Base64"};
        string strInitGuide = "변환할 값을 입력하세요.";
        string strResult = "No Value";

        int CodeIndex = 0;
        int ResultIndex = -1;

        Button Btn1 = new Button();
        Button ChangeBtn = new Button(); 

        ComboBox CodeBox = new ComboBox();
        ComboBox ResultBox = new ComboBox();

        GroupBox CodeGroupBox = new GroupBox();

        private TextBox _InBox = new TextBox();
        private TextBox _OutBox = new TextBox();

        public MyForm()
        {
            // 윈폼 종료 이벤트 추가
            this.FormClosing += MyForm_FormClosing;
            this.Load += MyForm_Load;

            // Button1 SET-UP
            SetButtonName(Btn1, "Convert");
            SetButtonSize(Btn1, 200, 100);
            SetButtonPostion(Btn1, 650, 600);

            // ComboBox SET-UP
            SetComboBoxPosition(CodeBox, 250, 20);
            SetComboBoxPosition(ResultBox, 650, 20);

            // GroupBox SET-UP
            CodeGroupBox.Text = "Base Converter Function";
            CodeGroupBox.Left = 50;
            CodeGroupBox.Top = 20;
            CodeGroupBox.Width = 900;
            CodeGroupBox.Height = 720;

            CodeBox.Items.AddRange(strCodeList);
            ResultBox.Items.AddRange(strCodeList);
            CodeBox.SelectedIndex = CodeIndex;
          
            this.Controls.Add(CodeGroupBox);
            CodeGroupBox.Controls.Add(CodeBox);
            CodeGroupBox.Controls.Add(ResultBox);
            CodeGroupBox.Controls.Add(Btn1);
        }

        private void ResultBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            ResultIndex = ResultBox.SelectedIndex;
        }

        private void CodeBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            CodeIndex = CodeBox.SelectedIndex;
        }
        
        // TextBox Mouse Event 메소드
        private void _InBox_MouseClick(object sender, EventArgs e)
        {
            string str = _InBox.Text;
            if(str == strInitGuide)
                _InBox.Text = "";
        }

        private void Btn1_Click(object sender, EventArgs e)
        {
            if(ResultIndex == -1)
            {
                MessageBox.Show("Select Result Code");
                return;
            }            
            else if(CodeIndex == -1)
            {
                MessageBox.Show("Select Convert Code");
                return;
            }

            strResult = ConvertCodeHandler(CodeIndex, ResultIndex);
            _OutBox.Text = strResult;
        }

        string ConvertCodeHandler(int codeNumber, int convertNumber)
        {
            string strReturn = "";
            
            switch(convertNumber)
            {
                case (int)EnumConvert.DECIMAL_TYPE:
                    strReturn = ConvertDecimalFunc(codeNumber);
                    break;
                
                case (int)EnumConvert.BINARY_TYPE:
                    strReturn = ConvertBinaryFunc(codeNumber);
                    break;
                case (int)EnumConvert.HEX_TYPE:
                    strReturn = ConvertHexFunc(codeNumber);
                    break;
                default:
                    strReturn = "";
                    break;
            }

            return strReturn;
        }

        string ConvertDecimalFunc(int codeNumber)
        {
            string strDec = "";

            switch(codeNumber)
            {
                case (int)EnumConvert.DECIMAL_TYPE:
                    strDec = _InBox.Text;
                    break;
                case (int)EnumConvert.BINARY_TYPE:
                    strDec = Convert.ToString(Convert.ToInt32(_InBox.Text), 2);
                    break;  
                case (int)EnumConvert.HEX_TYPE:
                    strDec = Convert.ToString(Convert.ToInt32(_InBox.Text), 16);
                    break;

            }

            return strDec;
        }

        string ConvertBinaryFunc(int codeNumber)
        {
            string strBin = "";

            switch(codeNumber)
            {
                case (int)EnumConvert.DECIMAL_TYPE:
                    strBin = Convert.ToString(Convert.ToInt32(_InBox.Text), 2);
                    break;
                case (int)EnumConvert.BINARY_TYPE:
                    strBin = _InBox.Text;
                    break;
                case (int)EnumConvert.HEX_TYPE:
                    strBin = Convert.ToString(Convert.ToInt32(_InBox.Text, 16), 2);
                    break;
            }

            return strBin;

        }

        string ConvertHexFunc(int codeNumber)
        {
            string strHex = "";

            switch(codeNumber)
            {
                case (int)EnumConvert.DECIMAL_TYPE:
                    strHex = Convert.ToInt32(_InBox.Text).ToString("X4");
                    break;
            }

            return strHex;
        }

        public void RegisterFunc()
        {
            CodeBox.SelectedIndexChanged += CodeBox_SelectedIndexChanged;
            ResultBox.SelectedIndexChanged += ResultBox_SelectedIndexChanged;
            Btn1.Click += Btn1_Click;
        }

        public void SetTextBox()
        {
            // Mouse 이벤트 추가
            _InBox.Click += _InBox_MouseClick;

            _InBox.AutoSize = false;
            _OutBox.AutoSize = false;
            _OutBox.ReadOnly = true;

            _InBox.MaxLength = 100;
            _OutBox.MaxLength = 100;

            _InBox.Width = 300;
            _InBox.Height = 500;
            _OutBox.Width = 300;
            _OutBox.Height = 500;

            _InBox.Left = 150;
            _InBox.Top = 50;

            _OutBox.Left = 550;
            _OutBox.Top = 50;

            _InBox.Text = strInitGuide;
            _OutBox.Text = strResult;

            CodeGroupBox.Controls.Add(_InBox);
            CodeGroupBox.Controls.Add(_OutBox);
        } 

        private void MyForm_Load(object sender, EventArgs e)
        {
            // Form Load Function
            
        }

        void SetButtonName(Button Btn, string StrName)
        {
            Btn.Text = StrName;
        }

        void SetButtonSize(Button Btn, int Width, int Height)
        {
           // Button Conrol 설정
           Btn.Width = Width;
           Btn.Height = Height;
        }

        void SetButtonPostion(Button Btn, int X, int Y)
        {
            Btn.Left = X;
            Btn.Top = Y;
        }

        void SetComboBoxPosition(ComboBox comBox, int X, int Y)
        {
            comBox.Left = X;
            comBox.Top = Y;
        }

        void MyForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            // Form Close Function
        }
    }
    
    class Program
    {
        static MyForm form = new MyForm();

        static void Main(string[] args)
        {
           form.Text += "AUTOMATION PROGRAM 0.0.1";

           form.SetTextBox();
           form.RegisterFunc();

           // Form 사이즈 변경
           form.Width = 1000;
           form.Height = 1200;

           form.ShowDialog();
        }

        static Font AutoFontSize(Label label, String text)
        {
            Font ft;
            Graphics gp;
            SizeF sz;
            Single Faktor, FaktorX, FaktorY;

            gp = label.CreateGraphics();
            sz = gp.MeasureString(text, label.Font);
            gp.Dispose();
           
            FaktorX = (label.Width) / sz.Width;
            FaktorY = (label.Height) / sz.Height;

            if (FaktorX > FaktorY)
                Faktor = FaktorY;
            else
                Faktor = FaktorX;
            ft = label.Font;
           
            return new Font(ft.Name, ft.SizeInPoints * (Faktor) - 1);
        }     
    }

}
